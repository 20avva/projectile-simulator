{"version":3,"sources":["VelocityAngleMode.js","ComponentMode.js","App.js","serviceWorker.js","index.js"],"names":["VelocityAngleMode","react_default","a","createElement","Container_default","fluid","Form_default","inline","onSubmit","this","props","handleSubmit","Label","className","Control","type","name","value","velocityVector","onChange","handleChange","angleDegrees","frameWidth","frameHeight","Button_default","variant","React","Component","ComponentMode","velX","velY","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","time","posX","posY","angleRadians","g","canvasHeight","canvasWidth","framePeriod","bind","assertThisInitialized","event","target","angle","Math","PI","setState","cos","sin","atan2","defineProperty","_this2","preventDefault","ctx","refs","canvas","getContext","clearRect","widthMToPixels","heightMToPixels","timeAtMaxHeight","maxX","maxY","range","totalTime","draw","animate","fillStyle","strokeStyle","beginPath","moveTo","quadraticCurveTo","stroke","x","y","arc","closePath","fill","setTimeout","Tabs_default","defaultActiveKey","id","Tab_default","eventKey","title","VelocityAngleMode_VelocityAngleMode","ComponentMode_ComponentMode","Table_default","striped","bordered","hover","width","height","ref","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d1ad32f6.chunk.js","sourcesContent":["import React from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nexport default class VelocityAngleMode extends React.Component {\r\n    render() {\r\n        return (\r\n            <Container fluid={true}>\r\n                <h2>Velocity-Angle Mode</h2>\r\n\r\n                <Form inline={true} onSubmit={this.props.handleSubmit}>\r\n                    <Form.Label className=\"mb-2 mr-sm-2\">Velocity of Launch (m/s)</Form.Label>\r\n                    <Form.Control type=\"number\" className=\"mb-2 mr-sm-2\" name=\"velocityVector\" value={this.props.velocityVector} onChange={this.props.handleChange} />\r\n                    <Form.Label className=\"mb-2 mr-sm-2\">Angle of Launch (Degrees)</Form.Label>\r\n                    <Form.Control type=\"number\" className=\"mb-2 mr-sm-2\" name=\"angleDegrees\" value={this.props.angleDegrees} onChange={this.props.handleChange} />\r\n\r\n                    <Form.Label className=\"mb02 mr-sm-2\">Frame Width</Form.Label>\r\n                    <Form.Control type=\"number\" className=\"mb-2 mr-sm-2\" name=\"frameWidth\" value={this.props.frameWidth} onChange={this.props.handleChange} />\r\n                    <Form.Label className=\"mb02 mr-sm-2\">Frame Height</Form.Label>\r\n                    <Form.Control type=\"number\" className=\"mb-2 mr-sm-2\" name=\"frameHeight\" value={this.props.frameHeight} onChange={this.props.handleChange} />\r\n                    <Button variant=\"primary\" type=\"submit\" className=\"mb-2 mr-sm-2\">Simulate!</Button>\r\n                </Form>\r\n            </Container>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nexport default class ComponentMode extends React.Component {\r\n    render() {\r\n        return (\r\n            <Container fluid={true}>\r\n                <h2>Component Mode</h2>\r\n\r\n                <Form inline={true} onSubmit={this.props.handleSubmit}>\r\n                    <Form.Label className=\"mb-2 mr-sm-2\">X Velocity (m/s)</Form.Label>\r\n                    <Form.Control type=\"number\" className=\"mb-2 mr-sm-2\" name=\"velX\" value={this.props.velX} onChange={this.props.handleChange} />\r\n                    <Form.Label className=\"mb-2 mr-sm-2\">Y Velocity (m/s)</Form.Label>\r\n                    <Form.Control type=\"number\" className=\"mb-2 mr-sm-2\" name=\"velY\" value={this.props.velY} onChange={this.props.handleChange} />\r\n\r\n                    <Form.Label className=\"mb02 mr-sm-2\">Frame Width</Form.Label>\r\n                    <Form.Control type=\"number\" className=\"mb-2 mr-sm-2\" name=\"frameWidth\" value={this.props.frameWidth} onChange={this.props.handleChange} />\r\n                    <Form.Label className=\"mb02 mr-sm-2\">Frame Height</Form.Label>\r\n                    <Form.Control type=\"number\" className=\"mb-2 mr-sm-2\" name=\"frameHeight\" value={this.props.frameHeight} onChange={this.props.handleChange} />\r\n                    <Button variant=\"primary\" type=\"submit\" className=\"mb-2 mr-sm-2\">Simulate!</Button>\r\n                </Form>\r\n            </Container>\r\n        );\r\n    }\r\n}","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport VelocityAngleMode from './VelocityAngleMode';\nimport ComponentMode from './ComponentMode';\nimport Table from 'react-bootstrap/Table';\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      time: 0, // s\n      posX: 0, // m\n      posY: 0, // m\n      velX: 0, // m/s\n      velY: 0, // m/s\n      angleDegrees: 0, // degrees\n      angleRadians: 0, // radians\n      velocityVector: 0, // m/s\n      g: 9.81, // m/s^2\n      canvasHeight: 400,\n      canvasWidth: 400,\n      framePeriod: 1, // ms\n      frameWidth: 400,\n      frameHeight: 400\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    if (event.target.name === \"angleDegrees\") {\n      const angle = event.target.value * (Math.PI / 180);\n      this.setState({\n        angleRadians: angle,\n        angleDegrees: event.target.value,\n        velX: Math.cos(angle) * this.state.velocityVector,\n        velY: Math.sin(angle) * this.state.velocityVector\n      });\n    } else if (event.target.name === \"velocityVector\") {\n      this.setState({\n        velocityVector: event.target.value,\n        velX: Math.cos(this.state.angleRadians) * event.target.value,\n        velY: Math.sin(this.state.angleRadians) * event.target.value\n      });\n    } else if (event.target.name === \"velX\") {\n      const value = event.target.value;\n      const angle = Math.atan2(this.state.velY, value);\n      this.setState({\n        angleRadians: angle,\n        angleDegrees: angle * (180 / Math.PI),\n        velX: value,\n        velocityVector: value / Math.cos(angle),\n      });\n    } else if (event.target.name === \"velY\") {\n      const value = event.target.value;\n      const angle = Math.atan2(value, this.state.velX);\n      this.setState({\n        angleRadians: angle,\n        angleDegrees: angle * (180 / Math.PI),\n        velY: value,\n        velocityVector: value / Math.cos(angle),\n      });\n    } else {\n      this.setState({[event.target.name]: event.target.value})\n    }\n  }\n\n  handleSubmit(event) {\n    event.preventDefault(); // don't refresh\n\n    const canvas = this.refs.canvas; // save a ref to the canvas\n    const ctx = canvas.getContext(\"2d\"); // get the 2D context of the canvas\n    \n    // clear the canvas\n    ctx.clearRect(0, 0, this.state.canvasWidth, this.state.canvasHeight);\n\n    const widthMToPixels = this.state.canvasWidth / this.state.frameWidth;\n    const heightMToPixels = this.state.canvasHeight / this.state.frameHeight;\n\n    // define kinematics formulae\n    const posX = (time) => {return this.state.velocityVector * Math.cos(this.state.angleRadians) * time;}\n    const posY = (time) => {return (this.state.velocityVector * Math.sin(this.state.angleRadians) * time) - (this.state.g * time * time);}\n    const velX = () => {return this.state.velX;}\n    const velY = (time) =>{return this.state.velY - (this.state.g * time);}\n\n    // Calculate max height\n    const timeAtMaxHeight = -1 * this.state.velY / this.state.g;\n    const maxX = posX(timeAtMaxHeight);\n    const maxY = posY(timeAtMaxHeight);\n\n    const range = -1 * this.state.velocityVector * this.state.velocityVector * Math.sin(2 * this.state.angleRadians) / this.state.g;\n\n    const totalTime = -2 * this.state.velY / this.state.g;\n\n    // draw loop\n    const draw = (time, animate, maxX, maxY) => {\n      this.setState({time: time, posX: posX(time), posY: posY(time)});\n\n      ctx.clearRect(0, 0, this.state.canvasWidth, this.state.canvasHeight);\n      ctx.fillStyle = \"rgb(0,0,200)\";\n      ctx.strokeStyle = \"rgb(200,0,0)\";\n\n      ctx.beginPath();\n      ctx.moveTo(0, this.state.canvasHeight);\n      ctx.quadraticCurveTo(maxX * widthMToPixels,\n        this.state.canvasHeight - 2 * maxY * heightMToPixels,\n        range * widthMToPixels,\n        this.state.canvasHeight);\n      ctx.stroke();\n\n      // draw current position\n      const x = posX(time) * widthMToPixels;\n      const y = this.state.canvasHeight - (posY(time) * heightMToPixels);\n      const xv = velX * widthMToPixels;\n      const yv = velY(time) * heightMToPixels;\n      \n      ctx.beginPath();\n      ctx.moveTo(x * widthMToPixels, this.state.canvasHeight - (y * heightMToPixels));\n      ctx.arc(x, y, 5, 0, Math.PI * 2, true);\n      ctx.closePath();\n      ctx.fill();\n\n      time += this.state.framePeriod / 1000;\n\n      if ((time <= totalTime + this.state.framePeriod*0.001) && animate)\n        setTimeout(() => {\n          draw(time, true);\n        }, this.state.framePeriod);\n    }\n\n    draw(0, true, maxX, maxY);\n  }\n\n  render() {\n    return (\n      <Container fluid={true}>\n        <h1 className=\"display-4\">Projectile Simulator</h1>\n        <p className=\"lead\">Select a mode from below. Velocity-Angle Mode takes the the magnitude of the initial velocity and the launch angle.\n        Component Mode takes the magnitude of each of the initial components.</p>\n        <Tabs defaultActiveKey=\"VelocityAngleMode\" id=\"mode-selector\">\n          <Tab eventKey=\"VelocityAngleMode\" title=\"Velocity-Angle Mode\">\n\n            <VelocityAngleMode\n              handleChange={this.handleChange.bind(this)}\n              handleSubmit={this.handleSubmit.bind(this)}\n              time={this.state.time}\n              posX={this.state.posX}\n              posY={this.state.posY}\n              velX={this.state.velX}\n              velY={this.state.velY}\n              angleDegrees={this.state.angleDegrees}\n              angleRadians={this.state.angleRadians}\n              velocityVector={this.state.velocityVector}\n              g={this.state.g}\n              canvasHeight={this.state.canvasHeight}\n              canvasWidth={this.state.canvasWidth}\n              framePeriod={this.state.framePeriod}\n              frameWidth={this.state.frameWidth}\n              frameHeight={this.state.frameHeight} />\n\n          </Tab>\n          <Tab eventKey=\"ComponentMode\" title=\"Component Mode\">\n\n            <ComponentMode \n              handleChange={this.handleChange.bind(this)}\n              handleSubmit={this.handleSubmit.bind(this)}\n              time={this.state.time}\n              posX={this.state.posX}\n              posY={this.state.posY}\n              velX={this.state.velX}\n              velY={this.state.velY}\n              angleDegrees={this.state.angleDegrees}\n              angleRadians={this.state.angleRadians}\n              velocityVector={this.state.velocityVector}\n              g={this.state.g}\n              canvasHeight={this.state.canvasHeight}\n              canvasWidth={this.state.canvasWidth}\n              framePeriod={this.state.framePeriod}\n              frameWidth={this.state.frameWidth}\n              frameHeight={this.state.frameHeight} />\n\n          </Tab>\n        </Tabs>\n        <Table striped bordered hover>\n          <thead>\n            <tr>\n              <th>Time</th>\n              <th>X Position</th>\n              <th>Y Position</th>\n              <th>X Velocity</th>\n              <th>Y Velocity</th>\n              <th>Speed</th>\n              <th>Angle</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            <tr>\n              <td>{this.state.time} s</td>\n              <td>{this.state.posX} m</td>\n              <td>{this.state.posY} m</td>\n              <td>{this.state.velX} m/s</td>\n              <td>{this.state.velY} m/s</td>\n              <td>{this.state.velocityVector} m/s</td>\n              <td>{this.state.angleDegrees}&deg;</td>\n            </tr>\n          </tbody>\n        </Table>\n        <canvas width={this.state.canvasWidth} height={this.state.canvasHeight} ref=\"canvas\">Get a modern browser!</canvas>\n      </Container>\n    )\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}