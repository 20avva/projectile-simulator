{"version":3,"sources":["VelocityAngleMode.js","ComponentMode.js","App.js","serviceWorker.js","index.js"],"names":["VelocityAngleMode","react_default","a","createElement","Container_default","fluid","Form_default","inline","onSubmit","this","props","handleSubmit","Label","className","Control","type","name","value","velocityVector","onChange","handleChange","angleDegrees","Button_default","variant","onClick","handleReset","React","Component","ComponentMode","velX","velY","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","time","deltaTime","posX","posY","angleRadians","g","canvasHeight","canvasWidth","data","bind","assertThisInitialized","event","target","angle","Math","PI","setState","cos","sin","atan2","defineProperty","_this2","preventDefault","timeOfFlight","newData","t","push","Number","parseFloat","toFixed","sqrt","atan","Tabs_default","defaultActiveKey","id","Tab_default","eventKey","title","VelocityAngleMode_VelocityAngleMode","ComponentMode_ComponentMode","length","Table_default","striped","bordered","hover","map","dataPoint","Navbar_default","sticky","fixed","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1c1345c0.chunk.js","sourcesContent":["import React from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nexport default class VelocityAngleMode extends React.Component {\r\n    render() {\r\n        return (\r\n            <Container fluid={true}>\r\n                <h2>Velocity-Angle Mode</h2>\r\n\r\n                <Form inline={true} onSubmit={this.props.handleSubmit}>\r\n                    <Form.Label className=\"mb-2 mr-sm-2\">Velocity of Launch (m/s)</Form.Label>\r\n                    <Form.Control type=\"text\" className=\"mb-2 mr-sm-2\" name=\"velocityVector\" value={this.props.velocityVector} onChange={this.props.handleChange} />\r\n                    <Form.Label className=\"mb-2 mr-sm-2\">Angle of Launch (Degrees)</Form.Label>\r\n                    <Form.Control type=\"text\" className=\"mb-2 mr-sm-2\" name=\"angleDegrees\" value={this.props.angleDegrees} onChange={this.props.handleChange} />\r\n                    {/*<Form.Label className=\"mb-2 mr-sm-2\">Simulation Time Step</Form.Label>\r\n                    <Form.Control type=\"text\" className=\"mb-2 mr-sm-2\" name=\"deltaTime\" value={this.props.deltaTime} onChange={this.props.handleChange} />\r\n                    */}\r\n                    <Button variant=\"primary\" type=\"submit\" className=\"mb-2 mr-sm-2\">Simulate!</Button>\r\n                    <Button variant=\"danger\" className=\"mb-2 mr-sm-2\" onClick={this.props.handleReset}>Reset</Button>\r\n                </Form>\r\n            </Container>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nexport default class ComponentMode extends React.Component {\r\n    render() {\r\n        return (\r\n            <Container fluid={true}>\r\n                <h2>Component Mode</h2>\r\n\r\n                <Form inline={true} onSubmit={this.props.handleSubmit}>\r\n                    <Form.Label className=\"mb-2 mr-sm-2\">X Velocity (m/s)</Form.Label>\r\n                    <Form.Control type=\"text\" className=\"mb-2 mr-sm-2\" name=\"velX\" value={this.props.velX} onChange={this.props.handleChange} />\r\n                    <Form.Label className=\"mb-2 mr-sm-2\">Y Velocity (m/s)</Form.Label>\r\n                    <Form.Control type=\"text\" className=\"mb-2 mr-sm-2\" name=\"velY\" value={this.props.velY} onChange={this.props.handleChange} />\r\n                    {/*<Form.Label className=\"mb-2 mr-sm-2\">Simulation Time Step</Form.Label>\r\n                    <Form.Control type=\"text\" className=\"mb-2 mr-sm-2\" name=\"deltaTime\" value={this.props.deltaTime} onChange={this.props.handleChange} />\r\n                    */}\r\n                    <Button variant=\"primary\" type=\"submit\" className=\"mb-2 mr-sm-2\">Simulate!</Button>\r\n                    <Button variant=\"danger\" className=\"mb-2 mr-sm-2\" onClick={this.props.handleReset}>Reset</Button>\r\n                </Form>\r\n            </Container>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Tabs from 'react-bootstrap/Tabs';\r\nimport Tab from 'react-bootstrap/Tab';\r\nimport VelocityAngleMode from './VelocityAngleMode';\r\nimport ComponentMode from './ComponentMode';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\n\r\nexport default class App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      time: 0, // s\r\n      deltaTime: 0.100,\r\n      posX: 0, // m\r\n      posY: 0, // m\r\n      velX: 0, // m/s\r\n      velY: 0, // m/s\r\n      angleDegrees: 0, // degrees\r\n      angleRadians: 0, // radians\r\n      velocityVector: 0, // m/s\r\n      g: 9.81, // m/s^2\r\n      canvasHeight: 100,\r\n      canvasWidth: 100,\r\n      data: []\r\n    }\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleReset = this.handleReset.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    if (event.target.name === \"angleDegrees\") {\r\n      const angle = event.target.value * (Math.PI / 180);\r\n      this.setState({\r\n        angleRadians: (angle),\r\n        angleDegrees: (event.target.value),\r\n        velX: (Math.cos(angle) * this.state.velocityVector),\r\n        velY: (Math.sin(angle) * this.state.velocityVector)\r\n      });\r\n    } else if (event.target.name === \"velocityVector\") {\r\n      this.setState({\r\n        velocityVector: (event.target.value),\r\n        velX: (Math.cos(this.state.angleRadians) * event.target.value),\r\n        velY: (Math.sin(this.state.angleRadians) * event.target.value)\r\n      });\r\n    } else if (event.target.name === \"velX\") {\r\n      const value = event.target.value;\r\n      const angle = Math.atan2(this.state.velY, value);\r\n      this.setState({\r\n        angleRadians: (angle),\r\n        angleDegrees: (angle * (180 / Math.PI)),\r\n        velX: (value),\r\n        velocityVector: (value / Math.cos(angle)),\r\n      });\r\n    } else if (event.target.name === \"velY\") {\r\n      const value = event.target.value;\r\n      const angle = Math.atan2(value, this.state.velX);\r\n      this.setState({\r\n        angleRadians: (angle),\r\n        angleDegrees: (angle * (180 / Math.PI)),\r\n        velY: (value),\r\n        velocityVector: (value / Math.cos(angle)),\r\n      });\r\n\r\n    } else {\r\n      this.setState({[event.target.name]: event.target.value})\r\n    }\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault(); // don't refresh\r\n\r\n    // kinematics equations\r\n    const posX = (time) => { return this.state.velX * time; }\r\n    const posY = (time) => { return (this.state.velY * time) - (0.5 * this.state.g * time * time); }\r\n    const velY = (time) => { return (this.state.velY - (this.state.g * time)); }\r\n    const velX = (time) => { return this.state.velX; }\r\n\r\n    // find the end posX for the end point of the graph\r\n    const timeOfFlight = (2 * this.state.velY) / this.state.g;\r\n    \r\n    let newData = [];\r\n\r\n    for (let t = 0; t <= timeOfFlight; t += this.state.deltaTime) {\r\n      newData.push({\r\n        time: Number.parseFloat(t).toFixed(3),\r\n        posX: Number.parseFloat(posX(t)).toFixed(3),\r\n        posY: Number.parseFloat(posY(t)).toFixed(3),\r\n        velX: Number.parseFloat(velX(t)).toFixed(3),\r\n        velY: Number.parseFloat(velY(t)).toFixed(3),\r\n        velocityVector: Number.parseFloat(Math.sqrt( (velX(t) * velX(t)) + (velY(t) * velY(t)) ).toFixed(3)),\r\n        angleDegrees: Number.parseFloat(Math.atan(velY(t) / velX(t)) * (180 / Math.PI) ).toFixed(3)\r\n      })\r\n    }\r\n    let t = timeOfFlight + this.state.deltaTime;\r\n    newData.push({\r\n      time: Number.parseFloat(t).toFixed(3),\r\n      posX: Number.parseFloat(posX(t)).toFixed(3),\r\n      posY: Number.parseFloat(posY(t)).toFixed(3),\r\n      velX: Number.parseFloat(velX(t)).toFixed(3),\r\n      velY: Number.parseFloat(velY(t)).toFixed(3),\r\n      velocityVector: Number.parseFloat(Math.sqrt( (velX(t) * velX(t)) + (velY(t) * velY(t)) ).toFixed(3)),\r\n      angleDegrees: Number.parseFloat(Math.atan(velY(t) / velX(t)) * (180 / Math.PI) ).toFixed(3)\r\n    })\r\n\r\n    this.setState({data: newData})\r\n  }\r\n\r\n  handleReset() {\r\n    this.setState({\r\n      time: 0, // s\r\n      deltaTime: 0.1,\r\n      posX: 0, // m\r\n      posY: 0, // m\r\n      velX: 0, // m/s\r\n      velY: 0, // m/s\r\n      angleDegrees: 0, // degrees\r\n      angleRadians: 0, // radians\r\n      velocityVector: 0, // m/s\r\n      g: 9.81, // m/s^2\r\n      data: []\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <Container fluid={true}>\r\n          <h1 className=\"display-4\">Projectile Simulator</h1>\r\n          <p className=\"lead\">Select a mode from below. Velocity-Angle Mode takes the the magnitude of the initial velocity and the launch angle.\r\n          Component Mode takes the magnitude of each of the initial components.</p>\r\n          <Tabs defaultActiveKey=\"VelocityAngleMode\" id=\"mode-selector\">\r\n            <Tab eventKey=\"VelocityAngleMode\" title=\"Velocity-Angle Mode\">\r\n\r\n              <VelocityAngleMode\r\n                handleChange={this.handleChange.bind(this)}\r\n                handleSubmit={this.handleSubmit.bind(this)}\r\n                handleReset={this.handleReset.bind(this)}\r\n                time={this.state.time}\r\n                deltaTime={this.state.deltaTime}\r\n                posX={this.state.posX}\r\n                posY={this.state.posY}\r\n                velX={this.state.velX}\r\n                velY={this.state.velY}\r\n                angleDegrees={this.state.angleDegrees}\r\n                angleRadians={this.state.angleRadians}\r\n                velocityVector={this.state.velocityVector}\r\n                g={this.state.g}\r\n                canvasHeight={this.state.canvasHeight}\r\n                canvasWidth={this.state.canvasWidth} />\r\n\r\n            </Tab>\r\n            <Tab eventKey=\"ComponentMode\" title=\"Component Mode\">\r\n\r\n              <ComponentMode \r\n                handleChange={this.handleChange.bind(this)}\r\n                handleSubmit={this.handleSubmit.bind(this)}\r\n                handleReset={this.handleReset.bind(this)}\r\n                time={this.state.time}\r\n                deltaTime={this.state.deltaTime}\r\n                posX={this.state.posX}\r\n                posY={this.state.posY}\r\n                velX={this.state.velX}\r\n                velY={this.state.velY}\r\n                angleDegrees={this.state.angleDegrees}\r\n                angleRadians={this.state.angleRadians}\r\n                velocityVector={this.state.velocityVector}\r\n                g={this.state.g}\r\n                canvasHeight={this.state.canvasHeight}\r\n                canvasWidth={this.state.canvasWidth} />\r\n\r\n            </Tab>\r\n          </Tabs>\r\n          {this.state.data.length > 0 && \r\n            <Table striped bordered hover>\r\n              <thead>\r\n                <tr>\r\n                  <th>Time</th>\r\n                  <th>X Position</th>\r\n                  <th>Y Position</th>\r\n                  <th>X Velocity</th>\r\n                  <th>Y Velocity</th>\r\n                  <th>Speed</th>\r\n                  <th>Angle</th>\r\n                </tr>\r\n              </thead>\r\n\r\n              <tbody>\r\n                {this.state.data.map(dataPoint => (\r\n                  <tr>\r\n                  <td>{dataPoint.time} s</td>\r\n                  <td>{dataPoint.posX} m</td>\r\n                  <td>{dataPoint.posY} m</td>\r\n                  <td>{dataPoint.velX} m/s</td>\r\n                  <td>{dataPoint.velY} m/s</td>\r\n                  <td>{dataPoint.velocityVector} m/s</td>\r\n                  <td>{dataPoint.angleDegrees}&deg;</td>\r\n                </tr>\r\n                ))}\r\n              </tbody>\r\n            </Table>\r\n          }\r\n          {this.state.data.length > 0 && <Navbar sticky=\"bottom\"><p className=\"small\">Copyright &copy; 2019 Pranav Avva. All Right Reserved</p></Navbar> }\r\n          {this.state.data.length === 0 && <Navbar fixed=\"bottom\"><p className=\"small\">Copyright &copy; 2019 Pranav Avva. All Right Reserved</p></Navbar> }\r\n        </Container>\r\n      );\r\n   }\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}